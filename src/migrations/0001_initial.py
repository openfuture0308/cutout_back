# Generated by Django 5.0 on 2024-11-08 17:24

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BoxImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=50, null=True)),
                ('vendor_code', models.CharField(max_length=50, null=True)),
                ('lot_code', models.CharField(max_length=50, null=True)),
                ('lot_location', models.CharField(max_length=50, null=True)),
                ('production_date', models.DateTimeField(blank=True, null=True)),
                ('exprie_date', models.DateTimeField(blank=True, null=True)),
                ('stock_qty', models.CharField(max_length=50, null=True)),
                ('alt_qty', models.CharField(max_length=50, null=True)),
                ('unit_cost', models.CharField(max_length=50, null=True)),
                ('weight', models.CharField(max_length=50, null=True)),
                ('po_number', models.CharField(max_length=50, null=True)),
                ('pallet_id', models.CharField(max_length=50, null=True)),
                ('pallet_location', models.CharField(max_length=50, null=True)),
                ('lot_batch_number', models.CharField(max_length=50, null=True)),
                ('create_po', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'box_imports',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(max_length=50, null=True)),
                ('account_phone', models.CharField(max_length=50, null=True)),
                ('account_type', models.CharField(max_length=50, null=True)),
                ('account_description', models.CharField(max_length=50, null=True)),
                ('account_id', models.CharField(db_column='account_id', max_length=50, null=True)),
                ('account_source', models.CharField(max_length=50, null=True)),
                ('alpha_name', models.CharField(max_length=50, null=True)),
                ('billing_city', models.CharField(max_length=50, null=True)),
                ('billing_country', models.CharField(max_length=50, null=True)),
                ('billing_group', models.CharField(max_length=50, null=True)),
                ('billing_state_province', models.CharField(max_length=50, null=True)),
                ('billing_street', models.CharField(max_length=50, null=True)),
                ('billing_zip_postal_Code', models.CharField(max_length=50, null=True)),
                ('canopy_currency', models.CharField(max_length=50, null=True)),
                ('canopy_customer_code', models.CharField(max_length=50, null=True)),
                ('canopy_customer_key', models.CharField(max_length=50, null=True)),
                ('canopy_pricing_grp', models.CharField(max_length=50, null=True)),
                ('canopy_vendor_code', models.CharField(max_length=50, null=True)),
                ('industry', models.CharField(max_length=50, null=True)),
                ('ship_to_contact_name', models.CharField(max_length=50, null=True)),
                ('ship_to_display', models.CharField(max_length=50, null=True)),
                ('shipping_city', models.CharField(max_length=50, null=True)),
                ('shipping_country', models.CharField(max_length=50, null=True)),
                ('shipping_state_province', models.CharField(max_length=50, null=True)),
                ('shipping_street', models.CharField(max_length=50, null=True)),
                ('shipping_zip_postal_code', models.CharField(max_length=50, null=True)),
                ('vendor_ship_from', models.CharField(max_length=50, null=True)),
                ('website', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'contacts',
            },
        ),
        migrations.CreateModel(
            name='ContactEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(max_length=50, null=True)),
                ('account_phone', models.CharField(max_length=50, null=True)),
                ('account_type', models.CharField(max_length=50, null=True)),
                ('account_description', models.CharField(max_length=50, null=True)),
                ('account_id', models.CharField(max_length=50, null=True)),
                ('account_source', models.CharField(max_length=50, null=True)),
                ('alpha_name', models.CharField(max_length=50, null=True)),
                ('billing_city', models.CharField(max_length=50, null=True)),
                ('billing_country', models.CharField(max_length=50, null=True)),
                ('billing_group', models.CharField(max_length=50, null=True)),
                ('billing_state_province', models.CharField(max_length=50, null=True)),
                ('billing_street', models.CharField(max_length=50, null=True)),
                ('billing_zip_postal_Code', models.CharField(max_length=50, null=True)),
                ('canopy_currency', models.CharField(max_length=50, null=True)),
                ('canopy_customer_code', models.CharField(max_length=50, null=True)),
                ('canopy_customer_key', models.CharField(max_length=50, null=True)),
                ('canopy_pricing_grp', models.CharField(max_length=50, null=True)),
                ('canopy_vendor_code', models.CharField(max_length=50, null=True)),
                ('industry', models.CharField(max_length=50, null=True)),
                ('ship_to_contact_name', models.CharField(max_length=50, null=True)),
                ('ship_to_display', models.CharField(max_length=50, null=True)),
                ('shipping_city', models.CharField(max_length=50, null=True)),
                ('shipping_country', models.CharField(max_length=50, null=True)),
                ('shipping_state_province', models.CharField(max_length=50, null=True)),
                ('shipping_street', models.CharField(max_length=50, null=True)),
                ('shipping_zip_postal_code', models.CharField(max_length=50, null=True)),
                ('vendor_ship_from', models.CharField(max_length=50, null=True)),
                ('website', models.CharField(max_length=255, null=True)),
                ('business_phone', models.CharField(max_length=50, null=True)),
                ('email', models.CharField(max_length=50, null=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('title', models.CharField(max_length=50, null=True)),
                ('business_fax', models.CharField(max_length=50, null=True)),
                ('contact_cd', models.CharField(max_length=50, null=True)),
                ('contact_display', models.CharField(max_length=50, null=True)),
                ('contact_id', models.CharField(max_length=50, null=True)),
                ('full_name', models.CharField(max_length=50, null=True)),
                ('sms_opt_ou', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'contact_emails',
            },
        ),
        migrations.CreateModel(
            name='CutOutMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_flag', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'cutout_mails',
            },
        ),
        migrations.CreateModel(
            name='CutOutMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mail_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField()),
                ('lot_number', models.CharField(blank=True, max_length=50, null=True)),
                ('hd_amount', models.IntegerField(blank=True, null=True)),
                ('type_grade', models.CharField(blank=True, max_length=50, null=True)),
                ('lw_in_kg', models.FloatField(blank=True, null=True)),
                ('lw_avg_kg', models.FloatField(blank=True, null=True)),
                ('lw_avg_lbs', models.FloatField(blank=True, null=True)),
                ('hhw_in_kg', models.FloatField(blank=True, null=True)),
                ('total_hhw_lbs', models.FloatField(blank=True, null=True)),
                ('hhw_avg_kg', models.FloatField(blank=True, null=True)),
                ('hhw_avg_lbs', models.FloatField(blank=True, null=True)),
                ('yield_dress', models.CharField(blank=True, max_length=50, null=True)),
                ('cw_in_kg', models.FloatField(blank=True, null=True)),
                ('cw_shrink', models.CharField(blank=True, max_length=50, null=True)),
                ('cw_avg_kg', models.FloatField(blank=True, null=True)),
                ('cw_avg_lbs', models.FloatField(blank=True, null=True)),
                ('live_dollar_per_kg', models.FloatField(blank=True, null=True)),
                ('yield_cut', models.CharField(blank=True, max_length=50, null=True)),
                ('hhw_dollar_per_kg', models.FloatField(blank=True, null=True)),
                ('hhw_avg_kg_meat', models.FloatField(blank=True, null=True)),
                ('hhw_avg_lbs_meat', models.FloatField(blank=True, null=True)),
                ('yield_meat', models.CharField(blank=True, max_length=50, null=True)),
                ('bulls_amount', models.IntegerField(blank=True, null=True)),
                ('heifers_amount', models.IntegerField(blank=True, null=True)),
                ('cows_amount', models.IntegerField(blank=True, null=True)),
                ('mature', models.IntegerField(blank=True, null=True)),
                ('hhw_dollar_per_lb', models.FloatField(blank=True, null=True)),
                ('cost_hhw', models.FloatField(blank=True, null=True)),
                ('cost_plant_hd', models.FloatField(blank=True, null=True)),
                ('cost_plant', models.FloatField(blank=True, null=True)),
                ('cost_fob', models.FloatField(blank=True, null=True)),
                ('cost_sga_lb', models.FloatField(blank=True, null=True)),
                ('cost_sga', models.FloatField(blank=True, null=True)),
                ('cost_kill', models.FloatField(blank=True, null=True)),
                ('sell_primal', models.FloatField(blank=True, null=True)),
                ('sell_offal', models.FloatField(blank=True, null=True)),
                ('sell_profit', models.FloatField(blank=True, null=True)),
                ('sell_primal_hd', models.FloatField(blank=True, null=True)),
                ('sell_offal_hd', models.FloatField(blank=True, null=True)),
                ('margin', models.CharField(blank=True, max_length=50, null=True)),
                ('sell_hd', models.FloatField(blank=True, null=True)),
                ('cost_hd', models.FloatField(blank=True, null=True)),
                ('profit_hd', models.FloatField(blank=True, null=True)),
                ('eu_fx', models.FloatField(blank=True, null=True)),
                ('primal_kgs', models.FloatField(blank=True, null=True)),
                ('primal_avg_dollar_kg', models.FloatField(blank=True, null=True)),
                ('kgs_hd_offal', models.FloatField(blank=True, null=True)),
                ('yield_offals', models.CharField(blank=True, max_length=50, null=True)),
                ('offal_kgs', models.FloatField(blank=True, null=True)),
                ('offal_avg_dollar_kg', models.FloatField(blank=True, null=True)),
                ('code_crl', models.CharField(blank=True, max_length=50, null=True)),
                ('sell_kg', models.FloatField(blank=True, null=True)),
                ('price_lb_usd', models.FloatField(blank=True, null=True)),
                ('kgs_total', models.FloatField(blank=True, null=True)),
                ('kgs_hd', models.FloatField(blank=True, null=True)),
                ('value_total', models.FloatField(blank=True, null=True)),
                ('wt_percent_cuts', models.CharField(blank=True, max_length=50, null=True)),
                ('value_percent', models.CharField(blank=True, max_length=50, null=True)),
                ('cogs_kg', models.FloatField(blank=True, null=True)),
                ('cogs', models.FloatField(blank=True, null=True)),
                ('net_truck', models.CharField(blank=True, max_length=50, null=True, verbose_name='NetTruck')),
                ('net_truck_shrink', models.CharField(blank=True, max_length=50, null=True, verbose_name='NetTruckShrink')),
                ('price_back_to_farm', models.CharField(blank=True, max_length=50, null=True, verbose_name='PriceBackToFarm')),
                ('us_canada', models.CharField(blank=True, max_length=50, null=True)),
                ('plant_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'cutoutmaps',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Deck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'decks',
            },
        ),
        migrations.CreateModel(
            name='GradePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateField(blank=True, null=True)),
                ('end_time', models.DateField(blank=True, null=True)),
                ('grade_name', models.CharField(max_length=50, null=True)),
                ('price', models.FloatField()),
            ],
            options={
                'db_table': 'grade_prices',
                'db_table_comment': 'Product price along with grade',
            },
        ),
        migrations.CreateModel(
            name='GradeSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'grade_sheets',
            },
        ),
        migrations.CreateModel(
            name='HarvestReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('plant', models.CharField(max_length=50, null=True)),
                ('year', models.CharField(max_length=50, null=True)),
                ('period', models.CharField(max_length=50, null=True)),
                ('quarter', models.CharField(max_length=50, null=True)),
                ('location', models.CharField(max_length=50, null=True)),
                ('producer_id', models.CharField(max_length=50, null=True)),
                ('producer_owner', models.CharField(max_length=255, null=True)),
                ('count', models.CharField(max_length=50, null=True)),
                ('m_utm', models.CharField(max_length=50, null=True)),
                ('m_otm', models.CharField(max_length=50, null=True)),
                ('f_utm', models.CharField(max_length=50, null=True)),
                ('f_otm', models.CharField(max_length=50, null=True)),
                ('f_cow', models.CharField(max_length=50, null=True)),
                ('m_a1', models.CharField(max_length=50, null=True)),
                ('m_a2', models.CharField(max_length=50, null=True)),
                ('m_a3', models.CharField(max_length=50, null=True)),
                ('m_a4', models.CharField(max_length=50, null=True)),
                ('m_b1', models.CharField(max_length=50, null=True)),
                ('m_b2', models.CharField(max_length=50, null=True)),
                ('m_b3', models.CharField(max_length=50, null=True)),
                ('m_d1', models.CharField(max_length=50, null=True)),
                ('m_d2', models.CharField(max_length=50, null=True)),
                ('m_d3', models.CharField(max_length=50, null=True)),
                ('f_a1', models.CharField(max_length=50, null=True)),
                ('f_a2', models.CharField(max_length=50, null=True)),
                ('f_a3', models.CharField(max_length=50, null=True)),
                ('f_a4', models.CharField(max_length=50, null=True)),
                ('f_b1', models.CharField(max_length=50, null=True)),
                ('f_b2', models.CharField(max_length=50, null=True)),
                ('f_b3', models.CharField(max_length=50, null=True)),
                ('f_d1', models.CharField(max_length=50, null=True)),
                ('f_d2', models.CharField(max_length=50, null=True)),
                ('f_d3', models.CharField(max_length=50, null=True)),
                ('prior_yrs_b_h', models.CharField(max_length=255, null=True)),
                ('prior_yrs_mature', models.CharField(max_length=255, null=True)),
                ('total_avglive_lbs', models.CharField(max_length=50, null=True)),
                ('plant_avglive_lbs', models.CharField(max_length=50, null=True)),
                ('live_helper', models.CharField(max_length=255, null=True)),
                ('live_bull_lbs_helper', models.CharField(max_length=255, null=True)),
                ('live_heifers_lbs_helper', models.CharField(max_length=255, null=True)),
                ('live_cow_lbs_helper', models.CharField(max_length=255, null=True)),
                ('total_hhw_lbs', models.CharField(max_length=255, null=True)),
                ('avg_hhw_lbs', models.CharField(max_length=255, null=True)),
                ('hhw_helper', models.CharField(max_length=255, null=True)),
                ('hhw_bull_lbs_helper', models.CharField(max_length=255, null=True)),
                ('hhw_hei_lbs_helper', models.CharField(max_length=255, null=True)),
                ('hhw_cow_lbs_helper', models.CharField(max_length=255, null=True)),
                ('yield_to_plant_pcent', models.CharField(max_length=255, null=True)),
                ('shrink_helper', models.CharField(max_length=255, null=True)),
                ('avg_dol_per_lbs', models.CharField(max_length=255, null=True)),
                ('dol_per_lb_helper', models.CharField(max_length=255, null=True)),
                ('avg_dol_per_hd', models.CharField(max_length=255, null=True)),
                ('dol_per_hd_helper', models.CharField(max_length=255, null=True)),
                ('week', models.CharField(max_length=50, null=True)),
                ('pre_year_prod_per_owner', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'harvest_reps',
            },
        ),
        migrations.CreateModel(
            name='PlantCompareReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'plant_com_reps',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isactive', models.CharField(max_length=50, null=True)),
                ('code_crl', models.CharField(max_length=50, null=True)),
                ('price', models.FloatField(default=0.0)),
                ('cur_unit', models.CharField(max_length=50, null=True)),
                ('eft_date', models.CharField(max_length=50, null=True)),
                ('file_name', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'prices',
            },
        ),
        migrations.CreateModel(
            name='PriceManual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isactive', models.BooleanField(default=True)),
                ('code_crl', models.CharField(max_length=50, null=True)),
                ('price', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'ma_prices',
            },
        ),
        migrations.CreateModel(
            name='ProductManual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_uid', models.CharField(max_length=50, null=True)),
                ('code_crl', models.CharField(max_length=50, null=True)),
                ('status', models.CharField(max_length=50, null=True)),
                ('code_pff', models.CharField(max_length=50, null=True)),
                ('program', models.CharField(max_length=50, null=True)),
                ('code_pffshort', models.CharField(max_length=50, null=True)),
                ('code_cpm', models.CharField(max_length=50, null=True)),
                ('code_mr', models.CharField(max_length=50, null=True)),
                ('code_cfs', models.CharField(max_length=50, null=True)),
                ('code_bmp', models.CharField(max_length=50, null=True)),
                ('code_rmnm', models.CharField(max_length=50, null=True)),
                ('code_skfp', models.CharField(max_length=50, null=True)),
                ('code_mcf', models.CharField(max_length=50, null=True)),
                ('code_nf', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cut_type', models.CharField(max_length=50, null=True)),
                ('species', models.CharField(max_length=50, null=True)),
                ('product_type', models.CharField(max_length=50, null=True)),
                ('eu_identity', models.CharField(max_length=50, null=True)),
                ('age_days', models.CharField(max_length=50, null=True)),
                ('freeze_down', models.CharField(max_length=50, null=True)),
                ('case_size', models.CharField(max_length=50, null=True)),
                ('bag_size', models.CharField(max_length=50, null=True)),
                ('ecoli_test', models.CharField(max_length=50, null=True)),
                ('pieces_box', models.CharField(max_length=50, null=True)),
                ('bags_box', models.CharField(max_length=50, null=True)),
                ('pff_gtin', models.CharField(max_length=50, null=True)),
                ('gtin12', models.CharField(max_length=50, null=True)),
                ('gtin14', models.CharField(max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ma_products',
            },
        ),
        migrations.CreateModel(
            name='ProductReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'product_reps',
            },
        ),
        migrations.CreateModel(
            name='ProgramData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='code', max_length=50, unique=True)),
                ('description', models.CharField(default='description', max_length=255)),
            ],
            options={
                'db_table': 'programs',
            },
        ),
        migrations.CreateModel(
            name='SlaughterReportsManual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('animal_pk', models.CharField(max_length=50, null=True)),
                ('animal_iden', models.CharField(max_length=50, null=True)),
                ('slaughter_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('owner', models.CharField(max_length=50, null=True)),
                ('shipper', models.CharField(max_length=50, null=True)),
                ('live_weight', models.FloatField(blank=True, null=True)),
                ('hot_weight', models.FloatField(blank=True, null=True)),
                ('cold_weight', models.FloatField(blank=True, null=True)),
                ('age', models.CharField(max_length=50, null=True)),
                ('receiving_order_id', models.CharField(max_length=50, null=True)),
                ('condemn_flag', models.BooleanField(default=False)),
                ('lot_number', models.CharField(max_length=50, null=True)),
                ('species', models.CharField(max_length=50, null=True)),
                ('sex', models.CharField(max_length=50, null=True)),
                ('manifest_iden', models.CharField(max_length=50, null=True)),
                ('grading', models.CharField(max_length=50, null=True)),
                ('csf_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'ma_slaughter_reps',
            },
        ),
        migrations.CreateModel(
            name='CutInstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factory_type', models.CharField(max_length=50, null=True)),
                ('date', models.DateTimeField()),
                ('ecoli_testing', models.CharField(max_length=50, null=True)),
                ('bags_amount', models.CharField(max_length=50, null=True)),
                ('total_pieces', models.CharField(max_length=50, null=True)),
                ('extra_code', models.CharField(max_length=50, null=True)),
                ('comments', models.CharField(max_length=50, null=True)),
                ('attribute_name', models.CharField(max_length=50, null=True)),
                ('customers', models.ManyToManyField(related_name='cut_instructions', to='src.contact')),
                ('plant_id', models.ForeignKey(blank=True, db_column='plant_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='src.contact')),
            ],
            options={
                'db_table': 'cut_insts',
            },
        ),
        migrations.CreateModel(
            name='CutInstructionCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_amount', models.PositiveIntegerField(blank=True, null=True)),
                ('contact_id', models.ForeignKey(blank=True, db_column='contact_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='src.contact')),
                ('cut_instruction_id', models.ForeignKey(blank=True, db_column='cut_instruction_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='src.cutinstruction')),
            ],
            options={
                'db_table': 'cut_inst_customers',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_phone', models.CharField(max_length=50, null=True)),
                ('email', models.CharField(max_length=50, null=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('title', models.CharField(max_length=50, null=True)),
                ('business_fax', models.CharField(max_length=50, null=True)),
                ('contact_cd', models.CharField(max_length=50, null=True)),
                ('contact_display', models.CharField(max_length=50, null=True)),
                ('contact_id', models.CharField(max_length=50, null=True)),
                ('full_name', models.CharField(max_length=50, null=True)),
                ('sms_opt_ou', models.CharField(max_length=50, null=True)),
                ('account_id', models.ForeignKey(blank=True, db_column='account_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emails_con', to='src.contact')),
            ],
            options={
                'db_table': 'emails',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_uid', models.CharField(max_length=50, null=True)),
                ('code_crl', models.CharField(max_length=50, null=True)),
                ('status', models.CharField(max_length=50, null=True)),
                ('code_pff', models.CharField(max_length=50, null=True)),
                ('code_pffshort', models.CharField(max_length=50, null=True)),
                ('code_cpm', models.CharField(max_length=50, null=True)),
                ('code_mr', models.CharField(max_length=50, null=True)),
                ('code_cfs', models.CharField(max_length=50, null=True)),
                ('code_bmp', models.CharField(max_length=50, null=True)),
                ('code_rmnm', models.CharField(max_length=50, null=True)),
                ('code_skfp', models.CharField(max_length=50, null=True)),
                ('code_mcf', models.CharField(max_length=50, null=True)),
                ('code_nf', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cut_type', models.CharField(max_length=50, null=True)),
                ('species', models.CharField(max_length=50, null=True)),
                ('product_type', models.CharField(max_length=50, null=True)),
                ('eu_identity', models.CharField(max_length=50, null=True)),
                ('age_days', models.CharField(max_length=50, null=True)),
                ('freeze_down', models.CharField(max_length=50, null=True)),
                ('case_size', models.CharField(max_length=50, null=True)),
                ('bag_size', models.CharField(max_length=50, null=True)),
                ('ecoli_test', models.CharField(max_length=50, null=True)),
                ('pieces_box', models.CharField(max_length=50, null=True)),
                ('bags_box', models.CharField(max_length=50, null=True)),
                ('pff_gtin', models.CharField(max_length=50, null=True)),
                ('gtin12', models.CharField(max_length=50, null=True)),
                ('gtin14', models.CharField(max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('plants', models.ManyToManyField(related_name='products', to='src.contact')),
                ('programs', models.ManyToManyField(related_name='products', to='src.programdata')),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.AddField(
            model_name='cutinstruction',
            name='product_id',
            field=models.ForeignKey(blank=True, db_column='product_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='src.product'),
        ),
        migrations.CreateModel(
            name='ProductPlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, null=True)),
                ('plant_id', models.ForeignKey(blank=True, db_column='plant_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='src.contact')),
                ('product_id', models.ForeignKey(blank=True, db_column='customer_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='src.product')),
            ],
            options={
                'db_table': 'product_plants',
            },
        ),
        migrations.AddField(
            model_name='cutinstruction',
            name='program_id',
            field=models.ForeignKey(blank=True, db_column='program_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='src.programdata'),
        ),
        migrations.CreateModel(
            name='SlaughterReports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('animal_pk', models.CharField(max_length=50, null=True)),
                ('animal_iden', models.CharField(max_length=50, null=True)),
                ('slaughter_date', models.DateTimeField()),
                ('live_weight', models.FloatField()),
                ('hot_weight', models.FloatField()),
                ('cold_weight', models.FloatField()),
                ('age', models.CharField(max_length=50, null=True)),
                ('receiving_order_iden', models.CharField(max_length=50, null=True)),
                ('condemn_flag', models.BooleanField(default=False)),
                ('lot_number', models.CharField(max_length=50, null=True)),
                ('species', models.CharField(max_length=50, null=True)),
                ('sex', models.CharField(max_length=50, null=True)),
                ('manifest_iden', models.CharField(max_length=50, null=True)),
                ('csf_date', models.DateTimeField()),
                ('gradeprice_iden', models.ForeignKey(blank=True, db_column='gradeprice_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='src.gradeprice')),
                ('producer_iden', models.ForeignKey(blank=True, db_column='producer_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='src.contact')),
            ],
            options={
                'db_table': 'slaughter_reps',
            },
        ),
    ]
